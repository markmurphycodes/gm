{"ast":null,"code":"var _jsxFileName = \"/opt/gm/client/src/components/utils/terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst XTerminal = ({\n  socket\n}) => {\n  _s();\n\n  //  const [cmd, setCmd] = useState(\"\");\n  useEffect(() => {\n    var terminal = new Terminal();\n    terminal.open(document.getElementById(\"terminal\"));\n    terminal.onData(data => {\n      sendInput(data);\n    }); //terminal.onKey((event) => processInput(event.key, event.domEvent));\n\n    terminal.setOption(\"theme\", {\n      background: \"#202B33\",\n      foreground: \"#F5F8FA\"\n    });\n    socket.on(\"output\", data => {\n      recieveFromSocket(data);\n    }); //  const prompt = () => {\n    //    terminal.write(\"\\r\\n$ \");\n    //  };\n\n    const sendInput = input => {\n      socket.emit(\"input\", input);\n    };\n\n    const recieveFromSocket = data => {\n      terminal.write(data);\n    }; //  const processInput = (key, ev) => {\n    //    var printable = !ev.altKey && !ev.altGraphKey && !ev.ctrlKey && !ev.metaKey;\n    //    if (ev.keyCode === 13) {\n    //      if (cmd === \"clear\") {\n    //        terminal.clear();\n    //      }\n    //      console.log(\"Entered command: \", cmd);\n    //      setCmd(\"\");\n    //      prompt();\n    //    } else if (ev.keyCode === 8) {\n    //      // Do not delete the prompt\n    //      if (cmd.length > 0) {\n    //        setCmd(cmd.slice(0, cmd.length - 1));\n    //        terminal.write(\"\\b \\b\");\n    //      }\n    //    } else if (printable) {\n    //      setCmd(cmd + key);\n    //      terminal.write(key);\n    //    }\n    //  };\n\n\n    terminal.writeln(\"Hello There!\");\n    terminal.writeln(\"How are you?\");\n    terminal.setOption(\"cursorBlink\", true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_s(XTerminal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = XTerminal;\nexport default XTerminal;\n\nvar _c;\n\n$RefreshReg$(_c, \"XTerminal\");","map":{"version":3,"sources":["/opt/gm/client/src/components/utils/terminal.js"],"names":["React","useEffect","Terminal","XTerminal","socket","terminal","open","document","getElementById","onData","data","sendInput","setOption","background","foreground","on","recieveFromSocket","input","emit","write","writeln"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAChC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,GAAG,IAAIH,QAAJ,EAAf;AACAG,IAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAd;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAU;AACxBC,MAAAA,SAAS,CAACD,IAAD,CAAT;AACD,KAFD,EAHc,CAOd;;AAEAL,IAAAA,QAAQ,CAACO,SAAT,CAAmB,OAAnB,EAA4B;AAC1BC,MAAAA,UAAU,EAAE,SADc;AAE1BC,MAAAA,UAAU,EAAE;AAFc,KAA5B;AAKAV,IAAAA,MAAM,CAACW,EAAP,CAAU,QAAV,EAAqBL,IAAD,IAAU;AAC5BM,MAAAA,iBAAiB,CAACN,IAAD,CAAjB;AACD,KAFD,EAdc,CAkBd;AACA;AACA;;AAEA,UAAMC,SAAS,GAAIM,KAAD,IAAW;AAC3Bb,MAAAA,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqBD,KAArB;AACD,KAFD;;AAIA,UAAMD,iBAAiB,GAAIN,IAAD,IAAU;AAClCL,MAAAA,QAAQ,CAACc,KAAT,CAAeT,IAAf;AACD,KAFD,CA1Bc,CA8Bd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,IAAAA,QAAQ,CAACe,OAAT,CAAiB,cAAjB;AACAf,IAAAA,QAAQ,CAACe,OAAT,CAAiB,cAAjB;AACAf,IAAAA,QAAQ,CAACO,SAAT,CAAmB,aAAnB,EAAkC,IAAlC;AACD,GAtDQ,EAsDN,EAtDM,CAAT;AAuDA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3DD;;GAAMT,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\n\nconst XTerminal = ({ socket }) => {\n  //  const [cmd, setCmd] = useState(\"\");\n\n  useEffect(() => {\n    var terminal = new Terminal();\n    terminal.open(document.getElementById(\"terminal\"));\n    terminal.onData((data) => {\n      sendInput(data);\n    });\n\n    //terminal.onKey((event) => processInput(event.key, event.domEvent));\n\n    terminal.setOption(\"theme\", {\n      background: \"#202B33\",\n      foreground: \"#F5F8FA\",\n    });\n\n    socket.on(\"output\", (data) => {\n      recieveFromSocket(data);\n    });\n\n    //  const prompt = () => {\n    //    terminal.write(\"\\r\\n$ \");\n    //  };\n\n    const sendInput = (input) => {\n      socket.emit(\"input\", input);\n    };\n\n    const recieveFromSocket = (data) => {\n      terminal.write(data);\n    };\n\n    //  const processInput = (key, ev) => {\n    //    var printable = !ev.altKey && !ev.altGraphKey && !ev.ctrlKey && !ev.metaKey;\n    //    if (ev.keyCode === 13) {\n    //      if (cmd === \"clear\") {\n    //        terminal.clear();\n    //      }\n    //      console.log(\"Entered command: \", cmd);\n    //      setCmd(\"\");\n    //      prompt();\n    //    } else if (ev.keyCode === 8) {\n    //      // Do not delete the prompt\n    //      if (cmd.length > 0) {\n    //        setCmd(cmd.slice(0, cmd.length - 1));\n    //        terminal.write(\"\\b \\b\");\n    //      }\n    //    } else if (printable) {\n    //      setCmd(cmd + key);\n    //      terminal.write(key);\n    //    }\n    //  };\n\n    terminal.writeln(\"Hello There!\");\n    terminal.writeln(\"How are you?\");\n    terminal.setOption(\"cursorBlink\", true);\n  }, []);\n  return <div />;\n};\n\nexport default XTerminal;\n"]},"metadata":{},"sourceType":"module"}